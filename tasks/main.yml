---
- include: install.yml

- name: download acme.sh
  get_url:
    url: https://raw.githubusercontent.com/Neilpang/acme.sh/master/acme.sh
    dest: /tmp/acme.sh
    mode: 0500
  register: download

- name: install acme.sh
  shell: INSTALLONLINE=1 /tmp/acme.sh
           --home "{{ letsencrypt_base_dir }}"
  args:
    chdir: "/tmp"
  when: download.changed

- name: install deploy scripts
  copy:
    src: deploy_{{ item }}.sh
    dest: "{{ letsencrypt_base_dir }}/deploy/{{ item }}.sh"
    mode: 0500
  with_items:
    - freeipa
    - freeipa_staging
    - ejabberd

- set_fact:
    certs_to_copy:
        - DSTRootCAX3.cer
        - isrgrootx1.cer
        - LetsEncryptAuthorityX3.cer
        - LetsEncryptAuthorityX4.cer
  when: not letsencrypt_staging

- set_fact:
    certs_to_copy:
        - fakelerootx1.cer
        - fakeleintermediatex1.cer
  when: letsencrypt_staging

- name: copy root certificates
  copy:
    src: "{{ item }}"
    dest: "{{ letsencrypt_base_dir}}/{{ letsencrypt_domain }}/"
  with_items: "{{ letsencrypt_staging | ternary(certs_staging, certs_prod) }}"

- name: remove root certificates
  file:
    path: "{{ item }}"
    state: absent
  with_items:  "{{ letsencrypt_staging | ternary(certs_prod, certs_staging) }}"

- include: issue.yml

- name: install the certificate
  command: >
    {{ letsencrypt_base_dir }}/acme.sh --install-cert
      -d "{{ letsencrypt_domain }}"
      --cert-file "{{ letsencrypt_install.cert_path }}"
      --key-file "{{ letsencrypt_install.key_path }}"
      --ca-file "{{ letsencrypt_install.ca_path }}"
      --fullchain-file "{{ letsencrypt_install.fullchain_path }}"
      --reloadcmd "{{ letsencrypt_reloadcmd }}"
  when: letsencrypt_install_mode == "install" and issueW.changed

- name: deploy the certificate
  command: >
    {{ letsencrypt_base_dir }}/acme.sh --deploy
      -d "{{ letsencrypt_domain }}"
      --deploy-hook "{{ letsencrypt_deploy.staging_hook if letsencrypt_staging else letsencrypt_deploy.hook }}"
  when: letsencrypt_install_mode == "deploy" and (issueW.changed or issueS.changed) and letsencrypt_deploy.hook != "freeipa" and letsencrypt_deploy.staging_hook != "freeipa_staging"

- include: freeipa.yml
  when: letsencrypt_deploy.hook == "freeipa" and letsencrypt_deploy.staging_hook == "freeipa_staging"
